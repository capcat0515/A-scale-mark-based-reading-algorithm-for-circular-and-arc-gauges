#======min&max value 第一類
#topNMeanCenter=(381, 361)#(380.7, 360.7) #man1
#topNMeanCenter=(243, 261)#(242.7, 261.4) #man2
#topNMeanCenter=(203, 196)#(202.8, 195.6) #man3
#======
#======第二類
#topNMeanCenter=(373, 377)#(372.5, 377.4) #man1
#topNMeanCenter=(241, 264)#(241.4, 264.2) #man2
#topNMeanCenter=(202, 192)#(202.1, 191.9) #man3
#======
#======第三類
#topNMeanCenter=(381, 372)#(380.9, 371.7) #man1
#topNMeanCenter=(242, 257)#(242.3, 256.9) #man2
#topNMeanCenter=(199, 193)#(198.7, 192.8) #man3
#======
#======第四類
#topNMeanCenter=(376, 385)#(377.5, 385.2) #man1
#topNMeanCenter=(240, 271)#(239.7, 271.1) #man2
#topNMeanCenter=(210, 191)#(210.4, 190.7) #man3
#topNMeanCenter=(454, 476)#(473.1, 498.8) #acr2 (460.0,487.0) (453.6, 476.0)
#======
#======第五類(a)
#topNMeanCenter=(383, 376)#(383.0, 376.0) #man1
#topNMeanCenter=(241, 267)#(241.0, 267.0) #man2
#topNMeanCenter=(212, 187)#(212.0, 187.0) #man3
#topNMeanCenter=(175, 329)#(175.0, 329.0) #acr2 
#======
#======第五類(b)
#topNMeanCenter=(379, 382)#(379.1, 382.6) #man1
#topNMeanCenter=(237, 264)#(237.3, 263.8) #man2
#topNMeanCenter=(202, 189)#(201.9, 189.4) #man3
#topNMeanCenter=(458, 479)#(457.6, 479.1) #acr2 
#======


def gaugeCenterRec(c, g):
	# 0=第一類, 1=第二類, 2=第三類, 3=第四類, 4=第五類(a), 5=第五類(b)
	# 0=man1, 1=man2, 2=man3, 3=acr2 
	centerL=[ [(381, 361), (243, 261), (203, 196),(-1,-1)],
		[(373, 377), (241, 264), (202, 192), (-1,-1)],
		[(381, 372), (242, 257), (199, 193), (-1,-1)],
		[(376, 385), (240, 271), (210, 191), (454, 476)],
		[(383, 376), (241, 267), (212, 187), (175, 329)],
		[(379, 382), (237, 264), (202, 189), (458, 479)]
	]
	return centerL[c][g]


#======= proposed method & 第4類
#MSmatchD={136.0: 2.0, 182.0: 3, 226.0: 4.0, 271.0: 5.0, 316.0: 6.0} #man1
#MSmatchD={48.0: -1.0, 115.0: 0.0, 182.0: 1.0, 250.0: 2, 319.0: 3.0} #man2
#MSmatchD={48.0: 0, 101.0: 0.5, 154.0: 1.0, 211.0: 1.5, 267.0: 2.0, 320.0: 2.5} #man3
#MSmatchD={107.0: 10.0, 125.0: 20.0, 143.0: 30.0, 161.0: 40.0, 178.0: 50.0} #acr2
#======
#====== (min&max value 第一類) and 第二類 and 第三類 and 第五類(a) and 第五類(b) 
#MSmatchD={44.0:0.0, 316.0: 6.0} #man1
#MSmatchD={48.0: -1.0, 319.0: 3.0} #man2
#MSmatchD={48.0: 0, 320.0: 2.5} #man3
#MSmatchD={89.0: 0.0,178.0: 50.0} #acr2
#======
#======第4類
#MSmatchD={136.0: 2.0, 182.0: 3, 226.0: 4.0, 271.0: 5.0, 316.0: 6.0} #man1
#MSmatchD={48.0: -1.0, 115.0: 0.0, 182.0: 1.0, 250.0: 2, 319.0: 3.0} #man2
#MSmatchD={48.0: 0, 101.0: 0.5, 154.0: 1.0, 211.0: 1.5, 267.0: 2.0, 320.0: 2.5} #man3
#MSmatchD={107.0: 10.0, 125.0: 20.0, 143.0: 30.0, 161.0: 40.0, 178.0: 50.0} #acr2
 #[89.0, 106.0, 124.0, 143.0, 161.0, 180.0]
 #[89.0, 106.0, 124.0, 143.0, 161.0, 180.0]
 #MSmatchD={106.0: 10.0, 124.0: 20.0, 143.0: 30.0, 161.0: 40.0, 180.0: 50.0} #acr2
#======



def MSmatchDRec(c,g):
	# 0 = proposed method, 1 = min&max value
	# 0=man1, 1=man2, 2=man3, 3=acr2, 4=類似man2
	MSmatchDList=[
		[{136.0: 2.0, 182.0: 3, 226.0: 4.0, 271.0: 5.0, 316.0: 6.0},{48.0: -1.0, 115.0: 0.0, 182.0: 1.0, 250.0: 2, 319.0: 3.0}, 
			{48.0: 0, 101.0: 0.5, 154.0: 1.0, 211.0: 1.5, 267.0: 2.0, 320.0: 2.5}, {89:0.0, 106.0: 10.0, 124.0: 20.0, 143.0: 30.0, 161.0: 40.0, 180.0: 50.0},
			{48.0: 0.0, 115.0: 1.0, 182.0: 2.0, 250.0: 3, 319.0: 4.0}],
		[{44.0:0.0, 316.0: 6.0}, {48.0: -1.0, 319.0: 3.0}, {48.0: 0, 320.0: 2.5}, {89.0: 0.0,178.0: 50.0},
		{48.0: 0.0, 319.0: 4.0}],
	]
	return MSmatchDList[c][g]
#[GC, d1, d2]
#m1  =[(374, 377), 258, 232]
#m2  =[(238, 262), 179, 165]
#m3  =[(202, 190), 158, 142]
#arc2=[(454, 475), 345, 319]

def GC_d1_d1_Rec(g):
	# 0=man1, 1=man2, 2=man3, 3=acr2,
	Rec=[[(374, 377), 258, 232], [(238, 262), 179, 165], [(202, 190), 158, 142], [(454, 475), 345, 319]	]

	return Rec[g]
